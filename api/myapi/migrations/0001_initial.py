# Generated by Django 5.1.7 on 2025-03-29 01:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SatFiles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('subsystem_id', models.SmallIntegerField()),
                ('id_in_subsystem', models.IntegerField()),
                ('cur_file_ver', models.IntegerField()),
                ('last_down_seq_nr', models.BigIntegerField()),
                ('last_up_seq_nr', models.BigIntegerField()),
                ('updated_ts', models.DateTimeField()),
                ('first_down_seq_nr', models.BigIntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'sat files',
                'db_table': 'sat_files',
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('version', models.BigIntegerField(primary_key=True, serialize=False)),
                ('dirty', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'schema migrations',
                'db_table': 'schema_migrations',
            },
        ),
        migrations.CreateModel(
            name='DownloadGaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_ver', models.IntegerField()),
                ('start_entry', models.BigIntegerField()),
                ('end_entry', models.BigIntegerField()),
                ('gaps_ver', models.BigIntegerField()),
                ('gaps_count', models.IntegerField()),
                ('gaps_data', models.BinaryField()),
                ('sat_file', models.ForeignKey(db_column='sat_file_id', on_delete=django.db.models.deletion.RESTRICT, to='myapi.satfiles')),
            ],
            options={
                'verbose_name_plural': 'download gaps',
                'db_table': 'download_gaps',
                'constraints': [models.UniqueConstraint(fields=('sat_file', 'file_ver'), name='download_gaps_pk')],
            },
        ),
        migrations.CreateModel(
            name='DownloadEntriesArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq_nr', models.BigIntegerField()),
                ('file_ver', models.IntegerField()),
                ('received_ts', models.DateTimeField()),
                ('archived_ts', models.DateTimeField()),
                ('entry_nr', models.BigIntegerField()),
                ('entry_data', models.BinaryField()),
                ('sat_file', models.ForeignKey(db_column='sat_file_id', on_delete=django.db.models.deletion.RESTRICT, to='myapi.satfiles')),
            ],
            options={
                'verbose_name_plural': 'download entries archive',
                'db_table': 'download_entries_archive',
                'constraints': [models.UniqueConstraint(fields=('sat_file', 'seq_nr'), name='download_entries_archive_pk')],
            },
        ),
        migrations.CreateModel(
            name='DbFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_ver', models.IntegerField()),
                ('init_ts', models.DateTimeField()),
                ('update_ts', models.DateTimeField()),
                ('type_id', models.SmallIntegerField()),
                ('capacity', models.BigIntegerField()),
                ('last_entry', models.BigIntegerField()),
                ('sig', models.BigIntegerField()),
                ('upload_hash', models.BinaryField()),
                ('removed', models.BooleanField(default=False)),
                ('sat_file', models.ForeignKey(db_column='sat_file_id', on_delete=django.db.models.deletion.RESTRICT, to='myapi.satfiles')),
            ],
            options={
                'verbose_name_plural': 'db files',
                'db_table': 'db_files',
                'constraints': [models.UniqueConstraint(fields=('file_ver', 'sat_file'), name='db_files_pk')],
            },
        ),
        migrations.CreateModel(
            name='UploadEntriesArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq_nr', models.BigIntegerField()),
                ('file_ver', models.IntegerField()),
                ('received_ts', models.DateTimeField()),
                ('archived_ts', models.DateTimeField()),
                ('entry_nr', models.BigIntegerField()),
                ('entry_data', models.BinaryField()),
                ('sat_file', models.ForeignKey(db_column='sat_file_id', on_delete=django.db.models.deletion.RESTRICT, to='myapi.satfiles')),
            ],
            options={
                'verbose_name_plural': 'upload entries archive',
                'db_table': 'upload_entries_archive',
                'constraints': [models.UniqueConstraint(fields=('sat_file', 'seq_nr'), name='upload_entries_archive_pk')],
            },
        ),
        migrations.CreateModel(
            name='UploadGaps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_ver', models.IntegerField()),
                ('start_entry', models.BigIntegerField()),
                ('end_entry', models.BigIntegerField()),
                ('gaps_ver', models.BigIntegerField()),
                ('gaps_count', models.IntegerField()),
                ('gaps_data', models.BinaryField()),
                ('sat_file', models.ForeignKey(db_column='sat_file_id', on_delete=django.db.models.deletion.RESTRICT, to='myapi.satfiles')),
            ],
            options={
                'verbose_name_plural': 'upload gaps',
                'db_table': 'upload_gaps',
                'constraints': [models.UniqueConstraint(fields=('sat_file', 'file_ver'), name='upload_gaps_pk')],
            },
        ),
    ]
